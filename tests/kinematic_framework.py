#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Nov  2 12:51:29 2019

Shallow Cumulus Convection Kinematic Framework

@author: simon
"""


import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as manimation

dxdz = 20.0
Lx = 9e3
Lz = 2.7e3
t = 30000.

levs  = np.arange(-900, 1000, 400)
vlevs = np.r_[np.arange(-8, 0, 2.0), np.arange(2.0, 10., 2.0)]

def shallow_cumulus_strmf(t, z, x):
    hx = 1.8e3
    x0 = 3.6e3
    xc = 4.5e3
    z0, hz = 0.0, 3.4e3
    if z > 1.7e3:
        z0, hz = 7e2, 2e3
    alpha = 1.0 if abs(x - xc) <= 0.9e3 else 0.0
    beta = 1.0 if x <= 5.4e3 else -1.0
    
    A1, A2 = (0.0, 0.0)
    if t <= 300.0:
        A1 = 5.73e2
    elif 300 < t <= 900.0:
        A1 = 5.37e2
        A2 = 6e2 * (1 + np.cos(np.pi * ((t - 300.0) / 600.0 - 1.)))
    elif 900.0 < t <= 1500.0:
        A1 = 5.73e2 + 2.02e3 * (1 + np.cos(np.pi * ((t - 900.0) / 600.0 + 1)))
        A2 = 6e2 * (1 + np.cos(np.pi * (t - 300.0) / 600.0 - 1.))
    else:
        t1 = min(2400.0, t)
        A1 = 1.15e3 + 1.72e3 * (1 + np.cos(np.pi * ((t1 - 1500.0) / 900.0)))
        A2 = 5.00e2 * (1 + np.cos(np.pi * ((t1 - 1500.0) / 900.0 - 1.)))
        
    T1a = np.cos(alpha * np.pi * (x - x0) / hx)
    T1b = np.sin(beta * np.pi * (z - z0) / hz)
    T2  = (z / Lz) * (z / Lz)
    return -A1 * T1a * T1b + A2 / 2.0 * T2

        
x = np.arange(0, Lx + dxdz, dxdz)
z = np.arange(0, Lz + dxdz, dxdz)
XV, ZV = np.meshgrid(x * 1e-3, z * 1e-3)
PHI = np.empty((z.size, x.size))
for zi, zv in enumerate(z):
    PHI[zi] = list(map(lambda xv : shallow_cumulus_strmf(t, zv, xv), x))
    

rhow =  np.gradient(PHI, dxdz, axis=1)
rhou = -np.gradient(PHI, dxdz, axis=0)



f, ax = plt.subplots(figsize=(6,6))
cnt_flw = ax.contour(XV, ZV, PHI, colors='k', levels=levs, alpha=0.5)
cnt_wfc = ax.contour(XV, ZV, rhow, colors='k', levels=vlevs)
ax.set_xlabel("X (km)")
ax.set_ylabel("Z (km)")
ax.set_xlim(0, Lx * 1e-3)
ax.set_ylim(0, Lz * 1e-3)
ax.grid()
plt.show()


td1 = [1.702793E-78, 2.399936E-66, 7.558373E-78, 1.025495E-65, 1.017719E-76, 
       2.919077E-65,3.308341E-65, 2.538734E-65, 1.920908E-76, 1.024139E-64,
       9.347330E-65,7.345180E-65, 7.928515E-74, 9.314067E-66, 2.764042E-64,
       2.616686E-64,2.151939E-64, 1.725471E-64, 1.383328E-64, 8.555716E-75,
       4.051944E-64,6.760051E-64, 6.270682E-64, 5.290643E-64, 4.367508E-64,
       3.590563E-64,2.971568E-64, 2.477263E-64, 1.273623E-74, 1.143807E-63,
       1.702793E-78, 2.399936E-66, 7.558373E-78, 1.025495E-65, 1.017719E-76, 
       2.919077E-65,3.308341E-65, 2.538734E-65, 1.920908E-76, 1.024139E-64,
       9.347330E-65,7.345180E-65, 7.928515E-74, 9.314067E-66, 2.764042E-64, 
       2.616686E-64,2.151939E-64, 1.725471E-64, 1.383328E-64, 8.555716E-75, 
       4.051944E-64,6.760051E-64, 6.270682E-64, 5.290643E-64, 4.367508E-64, 
       3.590563E-64,2.971568E-64, 2.477263E-64, 1.273623E-74, 1.143807E-63, 
       1.446249E-63,1.338751E-63, 1.154498E-63, 9.756671E-64, 8.205508E-64, 
       6.926286E-64,5.868175E-64, 5.011682E-64, 4.301723E-64, 2.083787E-74,
       2.591895E-63,2.897166E-63, 2.678184E-63, 2.353437E-63, 2.031987E-63,
       1.808090E-63,6.531234E-16, 0.045553, 0.176617, 0.367922, 0.580360,0.772924,
       0.919005, 1.013468, 1.066917, 1.091260,1.087035, 1.041483, 0.938682, 
       0.774549, 0.566213,0.349208, 0.164436, 0.043496, 0.000872, 0.000000,
       0.000000, 0.000000, 0.000000, 0.000000, 0.000000,0.000000, 0.000000,
       0.000000, 0.000000, 0.000000,0.000000, 0.000000, 0.000000, 0.000000, 
       0.000000,0.000000, 0.000000, 0.000000, 0.000000, 0.000000,0.000000, 
       0.000000, 0.000000, 0.000000, 0.000000,0.000000, 0.000000, 0.000000,
       0.000000, 0.000000,0.000000, 0.000000, 0.000000, 0.000000]

td2= [1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000,1.000000, 
      1.000000, 1.000000, 1.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000,
      0.000000,0.000000, 0.000000, 0.000000, 0.000000, 0.000000,0.000000, 0.000000,
      0.000000, 0.000000, 0.000000,0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
      0.000000, 0.000000, 0.000000, 0.000000, 0.000000,0.000000, 0.000000,
      0.000000, 0.000000, 0.000000,0.000000, 0.000000, 0.000000, 0.000000,
      0.000000,0.000000, 0.000000, 0.000000, 0.000000, 0.000000,0.000000, 
      0.000000, 0.000000, 0.000000, 0.000000,0.000000, 0.000000, 0.000000,
      0.000000, 0.000000,0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
      0.000000, 0.000000, 0.000000, 0.000000, 0.000000,0.000000, 0.000000,
      0.000000, 0.000000, 0.000000,0.000000, 0.000000, 0.000000, 0.000000,
      0.000000,0.000000, 0.000000, 0.000000, 0.000000, 0.000000,0.000000, 
      0.000000, 0.000000, 0.000000, 0.000000,0.000000, 0.000000, 0.000000,
      0.000000, 0.000000,0.000000, 0.000000, 0.000000, 0.000000]

plt.plot(td2)
plt.plot(td1)
plt.show()
